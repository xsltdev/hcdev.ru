---
description: front-matter processing for Russian documentation translation
globs:
alwaysApply: true
---

# Front-matter Transformation для русской документации

При переводе документации на русский язык необходимо правильно обработать метаданные front-matter в начале файлов Markdown.

## Основные правила преобразования

1.  **Поле `title`**: Перенести в тело документа как заголовок первого уровня
2.  **Поле `description`**: Оставить в front-matter с переводом на русский язык
3.  **Остальные поля**: Удалить все прочие поля и их значения
4.  **Структура**: Сохранить корректный YAML формат front-matter

## Исходный формат

```yaml
---
title: Getting Started with Web Components
description: Learn how to create reusable web components using modern browser APIs
author: John Doe
date: 2024-01-15
tags: [web-components, javascript, html]
category: tutorial
layout: post
---

Содержимое документа...
```

## Целевой формат

```yaml
---
description: Изучите, как создавать переиспользуемые веб-компоненты с помощью современных браузерных API
---

# Начало работы с веб-компонентами

Содержимое документа...
```

## Правила обработки полей

### Обязательные действия

| Поле | Действие | Примечание |
|----|----|----|
| `title` | Перенести в тело документа | Как заголовок H1 в начале |
| `description` | Перевести и оставить | Единственное поле в front-matter |
| Все остальные | Удалить | Включая `author`, `date`, `tags`, `category`, etc. |

### Перевод заголовка

```markdown
<!-- ДО -->
---
title: Advanced CSS Grid Techniques
description: Master complex grid layouts with these advanced techniques
---

<!-- ПОСЛЕ -->
---
description: Освойте сложные макеты сетки с помощью этих продвинутых техник
---

# Продвинутые техники CSS Grid
```

### Работа с многострочными описаниями

```yaml
<!-- ДО -->
---
title: Performance Optimization Guide
description: |
  A comprehensive guide to optimizing web performance.
  Learn about lazy loading, code splitting, and caching strategies.
author: Jane Smith
---

<!-- ПОСЛЕ -->
---
description: Всеобъемлющее руководство по оптимизации производительности веб-приложений. Изучите ленивую загрузку, разделение кода и стратегии кэширования.
---

# Руководство по оптимизации производительности
```

### Обработка сложных структур

```yaml
<!-- ДО -->
---
title: "React Hooks: Complete Guide"
description: Everything you need to know about React Hooks
published: true
date: 2024-01-15
lastModified: 2024-01-20
tags:
  - react
  - hooks
  - javascript
meta:
  keywords: react, hooks, useState, useEffect
  robots: index, follow
---

<!-- ПОСЛЕ -->
---
description: Всё, что вам нужно знать о React Hooks
---

# React Hooks: Полное руководство
```

## Важные примечания

### Сохранение структуры документа

-   **Пустая строка**: Обязательна между front-matter и заголовком H1
-   **Заголовок H1**: Должен быть первым элементом после front-matter
-   **Исходное содержимое**: Начинается после заголовка H1

### Правила перевода

-   **Описание**: Переводить на русский язык, сохраняя смысл и стиль
-   **Заголовок**: Переводить заголовок, делая его естественным для русского языка
-   **Терминология**: Использовать устоявшиеся термины в русской технической документации

### Специальные случаи

#### Отсутствующий title

```yaml
<!-- Если title отсутствует, создать на основе filename или содержимого -->
---
description: Описание без заголовка
---

# [Создать подходящий заголовок на основе контекста]
```

#### Пустое описание

```yaml
<!-- Если description пустое, создать краткое описание на основе содержимого -->
---
description: [Краткое описание содержимого документа]
---
```

#### Множественные заголовки H1 в исходном документе

```markdown
<!-- Если в документе уже есть H1, title должен заменить первый H1 -->
<!-- Исходный документ с существующим H1 игнорируется -->
```

## Контроль качества

### Проверки после обработки

1.  ✅ Front-matter содержит только поле `description`
2.  ✅ Описание переведено на русский язык
3.  ✅ Заголовок H1 создан из поля `title`
4.  ✅ Сохранена пустая строка между front-matter и H1
5.  ✅ Удалены все лишние поля метаданных

### Примеры ошибок, которых нужно избегать

❌ **Неправильно**: Оставлены лишние поля

```yaml
---
description: Описание
author: Автор  # <- Удалить
---
```

❌ **Неправильно**: Заголовок не перенесён

```yaml
---
title: Заголовок  # <- Должен быть удалён и перенесён в тело
description: Описание
---
```

❌ **Неправильно**: Отсутствует пустая строка

```yaml
---
description: Описание
---
# Заголовок  # <- Нужна пустая строка выше
```

✅ **Правильно**: Чистая структура

```yaml
---
description: Переведённое описание документа
---

# Переведённый заголовок

Содержимое документа...
```
